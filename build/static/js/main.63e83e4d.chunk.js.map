{"version":3,"sources":["components/SelectBox.js","grid.js","App.js","index.js"],"names":["SelectBox","handleChange","value","name","onChange","className","gridJSON","textToDisplay","color","bgColor","breakpoint","App","useState","layout","setLayout","handleFn","useCallback","ev","target","bind","style","display","gridGap","gridTemplateColumns","width","finalWidth","i","getWidth","column","data","map","item","index","key","backgroundColor","gridColumnEnd","padding","borderRadius","ReactDOM","render","document","getElementById"],"mappings":"oJAUeA,MARf,YAAiD,IAA7BC,EAA4B,EAA5BA,aAAoBC,GAAQ,EAAdC,KAAc,EAARD,OACpC,OACA,4BAAQA,MAAOA,EAAOE,SAAUH,EAAcI,UAAU,aACpD,4BAAQH,MAAM,WAAd,YACA,4BAAQA,MAAM,WAAd,cC+BOI,EArCE,CACb,QAAW,CACP,OAAU,IACV,KAAQ,CACJ,CAACC,cAAe,sBAAuBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KACtF,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,eAAgBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAC/E,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,OAGxF,QAAW,CACP,OAAU,IACV,KAAQ,CACJ,CAACH,cAAe,sBAAuBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KACtF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,sBAAuBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KACtF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,KAChF,CAACH,cAAe,gBAAiBC,MAAO,OAAQC,QAAS,UAAWC,WAAY,QCE7EC,MA/Bf,WAAgB,IAAD,IACiBC,mBAAS,WAD1B,mBACJC,EADI,KACIC,EADJ,KAELC,EAAWC,sBAWjB,SAAsBC,GAClBH,EAAUG,EAAGC,OAAOhB,QAZkBiB,KAAK,OAc/C,OACI,6BACI,kBAAC,EAAD,CAAWjB,MAAOW,EAAQZ,aAAcc,IAExC,yBAAKK,MAAO,CAACC,QAAS,OAAQC,QAAS,OAAQC,oBAjBvD,SAAkBC,GACd,IAAIC,EAAa,GACbC,EAAI,EACR,GACID,GAAc,OACdC,UAEEA,EAAIF,GACV,OAAOC,EASiEE,CAASd,EAAOe,UAApF,UACKtB,EAASO,UADd,aACK,EAAkBgB,KAAKC,KAAI,SAACC,EAAMC,GAAW,IAClCzB,EAA+CwB,EAA/CxB,cAAeC,EAAgCuB,EAAhCvB,MAAOC,EAAyBsB,EAAzBtB,QAASC,EAAgBqB,EAAhBrB,WACvC,OACA,yBAAKuB,IAAKD,EAAOZ,MAAO,CAACZ,MAAOA,EAAO0B,gBAAiBzB,EAAS0B,cAAc,QAAD,OAAUzB,GAAc0B,QAAS,SAAUC,aAAc,SAAU9B,SCvBrK+B,IAASC,OACL,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.63e83e4d.chunk.js","sourcesContent":["import React from 'react';\nimport './Selectbox.scss';\nfunction SelectBox({handleChange, name, value}) {\n    return (\n    <select value={value} onChange={handleChange} className=\"selectbox\">\n        <option value=\"layout1\">Layout 1</option>\n        <option value=\"layout2\">Layout 2</option>\n    </select>\n    )\n}\nexport default SelectBox;\n","const gridJSON = {\n    \"layout1\": {\n        \"column\": \"3\",\n        \"data\": [\n            {textToDisplay: \"Dummy text layout 1\", color: '#000', bgColor: '#EDE7F6', breakpoint: '3'},\n            {textToDisplay: \"Dummy text 1\", color: '#000', bgColor: '#EDE7F6', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 2\", color: '#fff', bgColor: '#002884', breakpoint: '2'},\n            {textToDisplay: \"Dummy text 3\", color: '#fff', bgColor: '#002884', breakpoint: '3'},\n            {textToDisplay: \"Dummy text 4\", color: '#fff', bgColor: '#002884', breakpoint: '3'},\n            {textToDisplay: \"Dummy text 5\", color: '#000', bgColor: '#EDE7F6', breakpoint: '2'},\n            {textToDisplay: \"Dummy text 6\", color: '#000', bgColor: '#EDE7F6', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 7\", color: '#000', bgColor: '#EDE7F6', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 8\", color: '#000', bgColor: '#757ce8', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 9\", color: '#000', bgColor: '#757ce8', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 10\", color: '#000', bgColor: '#757ce8', breakpoint: '3'},\n            {textToDisplay: \"Dummy text 11\", color: '#000', bgColor: '#EDE7F6', breakpoint: '1'},\n        ]\n    },\n    \"layout2\": {\n        \"column\": \"4\",\n        \"data\": [\n            {textToDisplay: \"Dummy text layout 2\", color: '#ccc', bgColor: '#757ce8', breakpoint: '2'},\n            {textToDisplay: \"Dummy text 21\", color: '#ddd', bgColor: '#757ce8', breakpoint: '2'},\n            {textToDisplay: \"Dummy text 22\", color: '#ccc', bgColor: '#3f50b5', breakpoint: '4'},\n            {textToDisplay: \"Dummy text 23\", color: '#ddd', bgColor: '#3f50b5', breakpoint: '3'},\n            {textToDisplay: \"Dummy text 24\", color: '#ddd', bgColor: '#3f50b5', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 25\", color: '#ddd', bgColor: '#002884', breakpoint: '2'},\n            {textToDisplay: \"Dummy text layout 3\", color: '#ccc', bgColor: '#757ce8', breakpoint: '4'},\n            {textToDisplay: \"Dummy text 31\", color: '#ddd', bgColor: '#757ce8', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 32\", color: '#ccc', bgColor: '#3f50b5', breakpoint: '1'},\n            {textToDisplay: \"Dummy text 33\", color: '#ddd', bgColor: '#3f50b5', breakpoint: '3'},\n            {textToDisplay: \"Dummy text 34\", color: '#ddd', bgColor: '#3f50b5', breakpoint: '2'},\n            {textToDisplay: \"Dummy text 35\", color: '#ddd', bgColor: '#002884', breakpoint: '2'}\n        ]\n    }\n};\n\nexport default gridJSON;\n","import React, { useState, useCallback } from 'react';\nimport SelectBox from './components/SelectBox';\nimport gridJSON from './grid';\nfunction App() {\n    const [layout, setLayout] = useState('layout1');\n    const handleFn = useCallback(handleChange.bind(null));\n    function getWidth(width) {\n        let finalWidth = '';\n        let i = 0;\n        do {\n            finalWidth += \"1fr \";\n            i++;\n        }\n        while(i < width);\n        return finalWidth;\n    }\n    function handleChange(ev) {\n        setLayout(ev.target.value);\n    }\n    return (\n        <div>\n            <SelectBox value={layout} handleChange={handleFn} />\n            {/* <div onClick={() => setLayout(gridJSON.layout2)}>Switch</div> */}\n            <div style={{display: 'grid', gridGap: \"1rem\", gridTemplateColumns: getWidth(layout.column)}}>\n                {gridJSON[layout]?.data.map((item, index) => {\n                    const { textToDisplay, color, bgColor, breakpoint  } = item;\n                    return (\n                    <div key={index} style={{color: color, backgroundColor: bgColor, gridColumnEnd: `span ${breakpoint}`, padding: '1.5rem', borderRadius: '1rem'}}>{textToDisplay}</div>   \n                    )\n                })}\n            </div>\n        </div>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}